1. Мотивация
В системе «Александрит» выполнение заказов включает несколько компонентов и асинхронных взаимодействий. При возникновении ошибок или задержек без логирования сложно понять, что именно произошло: потерялись ли сообщения, был ли сбой в сервисе, или данные были некорректны.

Приоритет логирования и трейсинга
1. MES API — так как здесь по описанию происходят самые ресурсоёмкие и медленные операции
2. RabbitMQ интеграции (между MES и CRM) — критичное место возможной потери заказов
3. CRM API — именно здесь фиксируются финальные статусы заказов, а с описания у операторов как раз проблема в работе с CRM
А уже Shop API можно настроить позже, так как ошибки там влияют только на начальные стадии и вроде я не помню чтобы из описания там были проблемы.

Предлагаемое решение:
Используем стек Loki и Grafana как решение для логирования, таким образом имеем:
1. Поддержка структурированных логов (JSON),
2. Возможность объединения с дашбордами мониторинга
3. Разделение по профилям
4. Там вроде фильтровать удобно еще можно по времени и другим фильтрам

По политике безопасности:
1. Все логи передаются в защищённом виде (HTTPS)
2. Доступ через Grafana ограничен по ролям (DevOps, Support)
3. Логи с персональными данными (userId, email) маскируются или хэшируются
4. Логи доступа отдельно, с повышенным контролем

Политику хранения можно сделать каждой системы отдельный namespace, INFO и WARN хранить например месяц, ERROR 3 месяца, а DEBUG только для dev среды тоже месяц например

По схеме нужно ли отражать, потому что вроде как достаточно добавить блок Grafana Loki и просто протянуть стрелки из перечисленных сервисов указанных в Приоритет логирования и трейсинга.
